// =========================
// ЗАДАНИЯ ПО МЕТОДАМ МАССИВОВ
// =========================

// Базовые массивы для работы
const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
const fruits = ['яблоко', 'банан', 'апельсин', 'груша', 'киви'];
const users = [
  { name: 'Иван', age: 25, city: 'Москва' },
  { name: 'Мария', age: 30, city: 'СПб' },
  { name: 'Алексей', age: 22, city: 'Казань' },
  { name: 'Елена', age: 28, city: 'Москва' }
];

console.log('Исходные массивы:', { numbers, fruits, users });

// =========================
// ЗАДАНИЕ 1: Методы добавления/удаления элементов
// =========================

// 1.1. Добавьте элемент в конец массива numbers (push)
// Результат: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
// Ваш код здесь:
numbers.push(11)


// 1.2. Добавьте элемент в начало массива fruits (unshift)
// Результат: ['лимон', 'яблоко', 'банан', 'апельсин', 'груша', 'киви']

// Ваш код здесь:
fruits.unshift('лимон')

// 1.3. Удалите последний элемент из массива numbers (pop)
// Результат: [1, 2, 3, 4, 5, 6, 7, 8, 9]

// Ваш код здесь:
numbers.pop()

// 1.4. Удалите первый элемент из массива fruits (shift)
// Результат: ['банан', 'апельсин', 'груша', 'киви']

// Ваш код здесь:
fruits.shift()

// =========================
// ЗАДАНИЕ 2: Методы поиска и проверки
// =========================

// 2.1. Найдите индекс элемента 'апельсин' в массиве fruits (indexOf)
// Результат: 2

// Ваш код здесь:
fruits.indexOf('апельсин')

// 2.2. Проверьте, содержит ли массив numbers число 7 (includes)
// Результат: true

// Ваш код здесь:
numbers.includes(7)

// 2.3. Найдите первый элемент больше 5 в массиве numbers (find)
// Результат: 6

// Ваш код здесь:
numbers.find(el => el > 5)

// 2.4. Найдите пользователя старше 25 лет (find)
// Результат: { name: 'Мария', age: 30, city: 'СПб' }

// Ваш код здесь:
users.find(el => el.age > 25)

// =========================
// ЗАДАНИЕ 3: Методы преобразования (не изменяют исходный массив)
// =========================

// 3.1. Создайте новый массив, где каждый элемент умножен на 2 (map)
// Результат: [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]

// Ваш код здесь:
let newArr = numbers.map(el => el * 2)

// 3.2. Создайте массив только с именами пользователей (map)
// Результат: ['Иван', 'Мария', 'Алексей', 'Елена']

// Ваш код здесь:
let nameArr = users.map(el => el.name)


// 3.3. Отфильтруйте числа больше 5 (filter)
// Результат: [6, 7, 8, 9, 10]

// Ваш код здесь:


// 3.4. Отфильтруйте пользователей из Москвы (filter)
// Результат: [{ name: 'Иван', age: 25, city: 'Москва' }, { name: 'Елена', age: 28, city: 'Москва' }]

// Ваш код здесь:


// =========================
// ЗАДАНИЕ 4: Методы объединения и разделения
// =========================

// 4.1. Объедините массивы numbers и fruits (concat)
// Результат: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 'яблоко', 'банан', 'апельсин', 'груша', 'киви']

// Ваш код здесь:


// 4.2. Создайте строку из элементов массива fruits через запятую (join)
// Результат: 'яблоко,банан,апельсин,груша,киви'

// Ваш код здесь:


// 4.3. Разделите строку на массив (split)
const text = 'JavaScript,Python,Java,C++';
// Результат: ['JavaScript', 'Python', 'Java', 'C++']

// Ваш код здесь:
text.split(',')


// =========================
// ЗАДАНИЕ 5: Методы сортировки и изменения порядка
// =========================

// 5.1. Отсортируйте массив fruits по алфавиту (sort)
// Результат: ['апельсин', 'банан', 'груша', 'киви', 'яблоко']

// Ваш код здесь:
fruits.sort()

// 5.2. Отсортируйте пользователей по возрасту (sort)
// Результат: [{ name: 'Алексей', age: 22, ... }, { name: 'Иван', age: 25, ... }, ...]

// Ваш код здесь:
users.sort((a, b) => a.age - b.age)

// 5.3. Переверните массив numbers (reverse)
// Результат: [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]

// Ваш код здесь:
numbers.reverse()

// =========================
// ЗАДАНИЕ 6: Методы среза и вставки
// =========================

// 6.1. Получите первые 3 элемента из массива numbers (slice)
// Результат: [1, 2, 3]

// Ваш код здесь:
numbers.slice(0, 3)

// 6.2. Получите элементы с 3-го по 7-й (slice)
// Результат: [3, 4, 5, 6, 7]

// Ваш код здесь:
numbers.slice(3, 7)

// 6.3. Замените элементы с 2-го по 4-й в массиве numbers (splice)
// Замените на [20, 30, 40]
// Результат: [1, 20, 30, 40, 5, 6, 7, 8, 9, 10]

// Ваш код здесь:
numbers.splice(2, 3, 20, 30, 40)

// =========================
// ЗАДАНИЕ 7: Методы проверки и агрегации
// =========================

// 7.1. Проверьте, все ли числа больше 0 (every)
// Результат: true

// Ваш код здесь:
numbers.every(el => el > 0)

// 7.2. Проверьте, есть ли хотя бы один пользователь старше 35 (some)
// Результат: false

// Ваш код здесь:
users.some(el => el.age > 35)

// 7.3. Найдите сумму всех чисел в массиве numbers (reduce)
// Результат: 55

// Ваш код здесь:
numbers.reduce((accum, el) => accum + el, 0)

// 7.4. Создайте объект с количеством пользователей по городам (reduce)
// Результат: { 'Москва': 2, 'СПб': 1, 'Казань': 1 }

// Ваш код здесь:
users.reduce((accum, el) => accum[el.city] ? accum[el.city]++ : accum[el.city] = 1, {}) 

// =========================
// ЗАДАНИЕ 8: Сложные комбинации методов
// =========================

// 8.1. Получите массив имён пользователей старше 25 лет
// Результат: ['Мария', 'Елена']

// Ваш код здесь:
let arr = users.filter(el => el.age > 25).map(el => el.name)


// 8.2. Создайте строку с именами пользователей из Москвы через ' и '
// Результат: 'Иван и Елена'

// Ваш код здесь:
let mskStr = users.filter(el => el.city === 'Москва').map(el => el.name).join(' , ')

// 8.3. Найдите средний возраст всех пользователей
// Результат: 26.25

// Ваш код здесь:
let avgAge = users.reduce((accum, el) => accum + el.age, 0) / users.length

// =========================
// ЗАДАНИЕ 9: Работа с вложенными массивами
// =========================

const matrix = [
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9]
];

// 9.1. Преобразуйте матрицу в одномерный массив (flat)
// Результат: [1, 2, 3, 4, 5, 6, 7, 8, 9]

// Ваш код здесь:
let flatArr = matrix.flat()

// 9.2. Найдите сумму всех элементов матрицы
// Результат: 45

// Ваш код здесь:
let sumMatrix = matrix.flat().reduce((accum, el) => accum + el, 0)

// =========================
// ЗАДАНИЕ 10: Современные методы ES6+
// =========================

// 10.1. Создайте массив уникальных значений (Set + spread)
const duplicates = [1, 2, 2, 3, 3, 4, 5, 5];
// Результат: [1, 2, 3, 4, 5]

// Ваш код здесь:
// let set = new Set(duplicates)
let set = [...new Set(duplicates)]

// 10.2. Создайте массив из объекта (Object.values)
const person = { name: 'Иван', age: 25, city: 'Москва' };
// Результат: ['Иван', 25, 'Москва']

// Ваш код здесь:
let objArr = Object.values(person)

// 10.3. Создайте массив пар ключ-значение (Object.entries)
// Результат: [['name', 'Иван'], ['age', 25], ['city', 'Москва']]

// Ваш код здесь:
let objEntries = Object.entries(person)
